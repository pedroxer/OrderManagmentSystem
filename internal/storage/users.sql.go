// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: users.sql

package storage

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const getUser = `-- name: GetUser :one
SELECT user_id, username, password_hash, email, role, created_at FROM users WHERE email = $1
`

func (q *Queries) GetUser(ctx context.Context, email pgtype.Text) (User, error) {
	row := q.db.QueryRow(ctx, getUser, email)
	var i User
	err := row.Scan(
		&i.UserID,
		&i.Username,
		&i.PasswordHash,
		&i.Email,
		&i.Role,
		&i.CreatedAt,
	)
	return i, err
}

const saveUser = `-- name: SaveUser :one
INSERT INTO users (username, email, password_hash, role) VALUES ($1, $2, $3, 0) RETURNING user_id
`

type SaveUserParams struct {
	Username     string
	Email        pgtype.Text
	PasswordHash string
}

func (q *Queries) SaveUser(ctx context.Context, arg SaveUserParams) (int32, error) {
	row := q.db.QueryRow(ctx, saveUser, arg.Username, arg.Email, arg.PasswordHash)
	var user_id int32
	err := row.Scan(&user_id)
	return user_id, err
}
